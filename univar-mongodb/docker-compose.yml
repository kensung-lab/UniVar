services:
  configsvr:
    image: mongo:8.0.15-noble
    user: ${UID_GID}
    container_name: configsvr
    command:
      [
        "mongod",
        "--configsvr",
        "--replSet",
        "configReplSet",
        "--port",
        "27017",
        "--bind_ip_all",
        "--wiredTigerJournalCompressor",
        "zstd",
        "--zstdDefaultCompressionLevel",
        "14",
        "--wiredTigerCollectionBlockCompressor",
        "zstd",
        "--wiredTigerCacheSizeGB",
        "2",
        "--dbpath",
        "/data/db",
        "--keyFile",
        "/key/mongo-keyfile",
      ]
    volumes:
      - ./mongo-sharded/configsvr-data:/data/db
      - ./mongo-keyfile:/key/mongo-keyfile:ro
      - ./init-configsvr.js:/init/init-configsvr.js:ro
    restart: always
    networks:
      - mongos_internal

  shard1:
    image: mongo:8.0.15-noble
    user: ${UID_GID}
    container_name: shard1
    command:
      [
        "mongod",
        "--shardsvr",
        "--replSet",
        "shard1ReplSet",
        "--port",
        "27017",
        "--bind_ip_all",
        "--wiredTigerJournalCompressor",
        "zstd",
        "--zstdDefaultCompressionLevel",
        "14",
        "--wiredTigerCollectionBlockCompressor",
        "zstd",
        "--wiredTigerCacheSizeGB",
        "32",
        "--dbpath",
        "/data/db",
        "--keyFile",
        "/key/mongo-keyfile",
      ]
    volumes:
      - ./mongo-sharded/shard1-data:/data/db
      - ./mongo-keyfile:/key/mongo-keyfile:ro
      - ./init-shard1.js:/init/init-shard1.js:ro
    restart: always
    networks:
      - mongos_internal

  shard2:
    image: mongo:8.0.15-noble
    user: ${UID_GID}
    container_name: shard2
    command:
      [
        "mongod",
        "--shardsvr",
        "--replSet",
        "shard2ReplSet",
        "--port",
        "27017",
        "--bind_ip_all",
        "--wiredTigerJournalCompressor",
        "zstd",
        "--zstdDefaultCompressionLevel",
        "14",
        "--wiredTigerCollectionBlockCompressor",
        "zstd",
        "--wiredTigerCacheSizeGB",
        "32",
        "--dbpath",
        "/data/db",
        "--keyFile",
        "/key/mongo-keyfile",
      ]
    volumes:
      - ./mongo-sharded/shard2-data:/data/db
      - ./mongo-keyfile:/key/mongo-keyfile:ro
      - ./init-shard2.js:/init/init-shard2.js:ro
    restart: always
    networks:
      - mongos_internal

  shard3:
    image: mongo:8.0.15-noble
    user: ${UID_GID}
    container_name: shard3
    command:
      [
        "mongod",
        "--shardsvr",
        "--replSet",
        "shard3ReplSet",
        "--port",
        "27017",
        "--bind_ip_all",
        "--wiredTigerJournalCompressor",
        "zstd",
        "--zstdDefaultCompressionLevel",
        "14",
        "--wiredTigerCollectionBlockCompressor",
        "zstd",
        "--wiredTigerCacheSizeGB",
        "32",
        "--dbpath",
        "/data/db",
        "--keyFile",
        "/key/mongo-keyfile",
      ]
    volumes:
      - ./mongo-sharded/shard3-data:/data/db
      - ./mongo-keyfile:/key/mongo-keyfile:ro
      - ./init-shard3.js:/init/init-shard3.js:ro
    restart: always
    networks:
      - mongos_internal

  shard4:
    image: mongo:8.0.15-noble
    user: ${UID_GID}
    container_name: shard4
    command:
      [
        "mongod",
        "--shardsvr",
        "--replSet",
        "shard4ReplSet",
        "--port",
        "27017",
        "--bind_ip_all",
        "--wiredTigerJournalCompressor",
        "zstd",
        "--zstdDefaultCompressionLevel",
        "14",
        "--wiredTigerCollectionBlockCompressor",
        "zstd",
        "--wiredTigerCacheSizeGB",
        "32",
        "--dbpath",
        "/data/db",
        "--keyFile",
        "/key/mongo-keyfile",
      ]
    volumes:
      - ./mongo-sharded/shard4-data:/data/db
      - ./mongo-keyfile:/key/mongo-keyfile:ro
      - ./init-shard4.js:/init/init-shard4.js:ro
    restart: always
    networks:
      - mongos_internal

  mongos:
    image: mongo:8.0.15-noble
    user: ${UID_GID}
    container_name: mongos
    command:
      [
        "mongos",
        "--keyFile",
        "/key/mongo-keyfile",
        "--configdb",
        "configReplSet/configsvr:27017",
        "--port",
        "27017",
        "--bind_ip_all",
      ]
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD_FILE: /run/secrets/mongo-root-password
    ports:
      - "27217:27017"
    volumes:
      - ./mongo-sharded/mongos:/data/db
      - ./mongo-keyfile:/key/mongo-keyfile:ro
      - ./init-mongos.js:/init/init-mongos.js:ro
    secrets:
      - mongo-root-password
    depends_on:
      - configsvr
      - shard1
      - shard2
      - shard3
      - shard4
    restart: always
    networks:
      - univar_network
      - mongos_internal

secrets:
  mongo-root-password:
    file: ./mongo-root-password

networks:
  univar_network:
    external: true
  mongos_internal:
    external: true
